# Generated by Django 5.0.3 on 2024-04-15 19:46

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('text_en', models.TextField(null=True)),
                ('text_cs', models.TextField(null=True)),
                ('text_de', models.TextField(null=True)),
                ('type', models.CharField(choices=[('OCA', 'One Correct Answer'), ('MCA', 'Multiple Correct Answers'), ('DND', 'Drag and Drop'), ('TXT', 'Text Answer')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='RegistrationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=320)),
                ('code', models.CharField(max_length=64)),
                ('used', models.BooleanField(default=False)),
                ('password', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=50)),
                ('residence', models.CharField(max_length=50)),
                ('age', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(150)])),
                ('gender', models.CharField(max_length=50)),
                ('education', models.CharField(max_length=50)),
                ('employment', models.BooleanField()),
                ('job_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), size=None)),
                ('unemployed_months', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
            ],
        ),
        migrations.CreateModel(
            name='SubTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=99)),
                ('name_en', models.CharField(max_length=99, null=True)),
                ('name_cs', models.CharField(max_length=99, null=True)),
                ('name_de', models.CharField(max_length=99, null=True)),
            ],
            options={
                'verbose_name': 'Sub Topic',
                'verbose_name_plural': 'Sub Topics',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=99)),
                ('name_en', models.CharField(max_length=99, null=True)),
                ('name_cs', models.CharField(max_length=99, null=True)),
                ('name_de', models.CharField(max_length=99, null=True)),
                ('description', models.CharField(max_length=1024)),
                ('description_en', models.CharField(max_length=1024, null=True)),
                ('description_cs', models.CharField(max_length=1024, null=True)),
                ('description_de', models.CharField(max_length=1024, null=True)),
            ],
            options={
                'verbose_name': 'Topic',
                'verbose_name_plural': 'Topics',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('user', 'User'), ('analytic', 'Analytic'), ('admin', 'Admin')], default='user', max_length=8)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=50)),
                ('residence', models.CharField(max_length=50)),
                ('age', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(150)])),
                ('gender', models.CharField(max_length=50)),
                ('education', models.CharField(max_length=50)),
                ('employment', models.BooleanField()),
                ('job_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), size=None)),
                ('unemployed_months', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PasswordResetCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64)),
                ('used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OCAOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('text_en', models.CharField(max_length=255, null=True)),
                ('text_cs', models.CharField(max_length=255, null=True)),
                ('text_de', models.CharField(max_length=255, null=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='oca_options', to='api.question')),
            ],
            options={
                'verbose_name': 'OCA Option',
                'verbose_name_plural': 'OCA Options',
            },
        ),
        migrations.CreateModel(
            name='MCAOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('text_en', models.CharField(max_length=255, null=True)),
                ('text_cs', models.CharField(max_length=255, null=True)),
                ('text_de', models.CharField(max_length=255, null=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mca_options', to='api.question')),
            ],
            options={
                'verbose_name': 'MCA Option',
                'verbose_name_plural': 'MCA Options',
            },
        ),
        migrations.CreateModel(
            name='DnDOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('text_en', models.CharField(max_length=255, null=True)),
                ('text_cs', models.CharField(max_length=255, null=True)),
                ('text_de', models.CharField(max_length=255, null=True)),
                ('correct_position', models.IntegerField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dnd_options', to='api.question')),
            ],
            options={
                'verbose_name': 'DnD Option',
                'verbose_name_plural': 'DnD Options',
            },
        ),
        migrations.AddField(
            model_name='question',
            name='sub_topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='api.subtopic'),
        ),
        migrations.CreateModel(
            name='SurveyAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed', models.BooleanField(default=False)),
                ('language', models.CharField(blank=True, max_length=255)),
                ('answers_generated', models.BooleanField(default=False)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='survey_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Survey Attempt',
                'verbose_name_plural': 'Survey Attempts',
            },
        ),
        migrations.CreateModel(
            name='OCAAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True)),
                ('updated_at', django.contrib.postgres.fields.ArrayField(base_field=models.DateTimeField(), blank=True, size=None)),
                ('oca_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ocaoption')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.question')),
                ('survey_attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='oca_answers', to='api.surveyattempt')),
            ],
            options={
                'verbose_name': 'OCA Answer',
                'verbose_name_plural': 'OCA Answers',
            },
        ),
        migrations.CreateModel(
            name='MCAAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True)),
                ('updated_at', django.contrib.postgres.fields.ArrayField(base_field=models.DateTimeField(), blank=True, size=None)),
                ('selected_options', models.ManyToManyField(related_name='selected_by', to='api.mcaoption')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.question')),
                ('survey_attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mca_answers', to='api.surveyattempt')),
            ],
            options={
                'verbose_name': 'MCA Answer',
                'verbose_name_plural': 'MCA Answers',
            },
        ),
        migrations.CreateModel(
            name='DnDAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, size=None)),
                ('created_at', models.DateTimeField(blank=True)),
                ('updated_at', django.contrib.postgres.fields.ArrayField(base_field=models.DateTimeField(), blank=True, size=None)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.question')),
                ('survey_attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dnd_answers', to='api.surveyattempt')),
            ],
            options={
                'verbose_name': 'DnD Answer',
                'verbose_name_plural': 'DnD Answers',
            },
        ),
        migrations.CreateModel(
            name='TextAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True)),
                ('correct', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True)),
                ('updated_at', django.contrib.postgres.fields.ArrayField(base_field=models.DateTimeField(), blank=True, size=None)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.question')),
                ('survey_attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text_answers', to='api.surveyattempt')),
            ],
            options={
                'verbose_name': 'Text Answer',
                'verbose_name_plural': 'Text Answers',
            },
        ),
        migrations.AddField(
            model_name='subtopic',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtopics', to='api.topic'),
        ),
    ]
